// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/contactcenterinsights/v1/contact_center_insights.proto

package com.google.cloud.contactcenterinsights.v1;

/**
 * <pre>
 * The response for calculating conversation statistics.
 * </pre>
 *
 * Protobuf type {@code google.cloud.contactcenterinsights.v1.CalculateStatsResponse}
 */
public final class CalculateStatsResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.cloud.contactcenterinsights.v1.CalculateStatsResponse)
    CalculateStatsResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CalculateStatsResponse.newBuilder() to construct.
  private CalculateStatsResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CalculateStatsResponse() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CalculateStatsResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CalculateStatsResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (averageDuration_ != null) {
              subBuilder = averageDuration_.toBuilder();
            }
            averageDuration_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(averageDuration_);
              averageDuration_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {

            averageTurnCount_ = input.readInt32();
            break;
          }
          case 24: {

            conversationCount_ = input.readInt32();
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              smartHighlighterMatches_ = com.google.protobuf.MapField.newMapField(
                  SmartHighlighterMatchesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
            smartHighlighterMatches__ = input.readMessage(
                SmartHighlighterMatchesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            smartHighlighterMatches_.getMutableMap().put(
                smartHighlighterMatches__.getKey(), smartHighlighterMatches__.getValue());
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              customHighlighterMatches_ = com.google.protobuf.MapField.newMapField(
                  CustomHighlighterMatchesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
            customHighlighterMatches__ = input.readMessage(
                CustomHighlighterMatchesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            customHighlighterMatches_.getMutableMap().put(
                customHighlighterMatches__.getKey(), customHighlighterMatches__.getValue());
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              issueMatches_ = com.google.protobuf.MapField.newMapField(
                  IssueMatchesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000004;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
            issueMatches__ = input.readMessage(
                IssueMatchesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            issueMatches_.getMutableMap().put(
                issueMatches__.getKey(), issueMatches__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.cloud.contactcenterinsights.v1.ContactCenterInsightsProto.internal_static_google_cloud_contactcenterinsights_v1_CalculateStatsResponse_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 4:
        return internalGetSmartHighlighterMatches();
      case 5:
        return internalGetCustomHighlighterMatches();
      case 6:
        return internalGetIssueMatches();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.contactcenterinsights.v1.ContactCenterInsightsProto.internal_static_google_cloud_contactcenterinsights_v1_CalculateStatsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse.class, com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse.Builder.class);
  }

  public static final int AVERAGE_DURATION_FIELD_NUMBER = 1;
  private com.google.protobuf.Duration averageDuration_;
  /**
   * <pre>
   * The average duration of all conversations. The average is calculated using
   * only conversations that have a time duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration average_duration = 1;</code>
   * @return Whether the averageDuration field is set.
   */
  @java.lang.Override
  public boolean hasAverageDuration() {
    return averageDuration_ != null;
  }
  /**
   * <pre>
   * The average duration of all conversations. The average is calculated using
   * only conversations that have a time duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration average_duration = 1;</code>
   * @return The averageDuration.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getAverageDuration() {
    return averageDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : averageDuration_;
  }
  /**
   * <pre>
   * The average duration of all conversations. The average is calculated using
   * only conversations that have a time duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration average_duration = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getAverageDurationOrBuilder() {
    return getAverageDuration();
  }

  public static final int AVERAGE_TURN_COUNT_FIELD_NUMBER = 2;
  private int averageTurnCount_;
  /**
   * <pre>
   * The average number of turns per conversation.
   * </pre>
   *
   * <code>int32 average_turn_count = 2;</code>
   * @return The averageTurnCount.
   */
  @java.lang.Override
  public int getAverageTurnCount() {
    return averageTurnCount_;
  }

  public static final int CONVERSATION_COUNT_FIELD_NUMBER = 3;
  private int conversationCount_;
  /**
   * <pre>
   * The total number of conversations.
   * </pre>
   *
   * <code>int32 conversation_count = 3;</code>
   * @return The conversationCount.
   */
  @java.lang.Override
  public int getConversationCount() {
    return conversationCount_;
  }

  public static final int SMART_HIGHLIGHTER_MATCHES_FIELD_NUMBER = 4;
  private static final class SmartHighlighterMatchesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                com.google.cloud.contactcenterinsights.v1.ContactCenterInsightsProto.internal_static_google_cloud_contactcenterinsights_v1_CalculateStatsResponse_SmartHighlighterMatchesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.INT32,
                0);
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Integer> smartHighlighterMatches_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
  internalGetSmartHighlighterMatches() {
    if (smartHighlighterMatches_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          SmartHighlighterMatchesDefaultEntryHolder.defaultEntry);
    }
    return smartHighlighterMatches_;
  }

  public int getSmartHighlighterMatchesCount() {
    return internalGetSmartHighlighterMatches().getMap().size();
  }
  /**
   * <pre>
   * A map associating each smart highlighter display name with its respective
   * number of matches in the set of conversations.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; smart_highlighter_matches = 4;</code>
   */

  @java.lang.Override
  public boolean containsSmartHighlighterMatches(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetSmartHighlighterMatches().getMap().containsKey(key);
  }
  /**
   * Use {@link #getSmartHighlighterMatchesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer> getSmartHighlighterMatches() {
    return getSmartHighlighterMatchesMap();
  }
  /**
   * <pre>
   * A map associating each smart highlighter display name with its respective
   * number of matches in the set of conversations.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; smart_highlighter_matches = 4;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.Integer> getSmartHighlighterMatchesMap() {
    return internalGetSmartHighlighterMatches().getMap();
  }
  /**
   * <pre>
   * A map associating each smart highlighter display name with its respective
   * number of matches in the set of conversations.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; smart_highlighter_matches = 4;</code>
   */
  @java.lang.Override

  public int getSmartHighlighterMatchesOrDefault(
      java.lang.String key,
      int defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetSmartHighlighterMatches().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * A map associating each smart highlighter display name with its respective
   * number of matches in the set of conversations.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; smart_highlighter_matches = 4;</code>
   */
  @java.lang.Override

  public int getSmartHighlighterMatchesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetSmartHighlighterMatches().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int CUSTOM_HIGHLIGHTER_MATCHES_FIELD_NUMBER = 5;
  private static final class CustomHighlighterMatchesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                com.google.cloud.contactcenterinsights.v1.ContactCenterInsightsProto.internal_static_google_cloud_contactcenterinsights_v1_CalculateStatsResponse_CustomHighlighterMatchesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.INT32,
                0);
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Integer> customHighlighterMatches_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
  internalGetCustomHighlighterMatches() {
    if (customHighlighterMatches_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          CustomHighlighterMatchesDefaultEntryHolder.defaultEntry);
    }
    return customHighlighterMatches_;
  }

  public int getCustomHighlighterMatchesCount() {
    return internalGetCustomHighlighterMatches().getMap().size();
  }
  /**
   * <pre>
   * A map associating each custom highlighter resource name with its respective
   * number of matches in the set of conversations.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; custom_highlighter_matches = 5;</code>
   */

  @java.lang.Override
  public boolean containsCustomHighlighterMatches(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetCustomHighlighterMatches().getMap().containsKey(key);
  }
  /**
   * Use {@link #getCustomHighlighterMatchesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer> getCustomHighlighterMatches() {
    return getCustomHighlighterMatchesMap();
  }
  /**
   * <pre>
   * A map associating each custom highlighter resource name with its respective
   * number of matches in the set of conversations.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; custom_highlighter_matches = 5;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.Integer> getCustomHighlighterMatchesMap() {
    return internalGetCustomHighlighterMatches().getMap();
  }
  /**
   * <pre>
   * A map associating each custom highlighter resource name with its respective
   * number of matches in the set of conversations.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; custom_highlighter_matches = 5;</code>
   */
  @java.lang.Override

  public int getCustomHighlighterMatchesOrDefault(
      java.lang.String key,
      int defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetCustomHighlighterMatches().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * A map associating each custom highlighter resource name with its respective
   * number of matches in the set of conversations.
   * </pre>
   *
   * <code>map&lt;string, int32&gt; custom_highlighter_matches = 5;</code>
   */
  @java.lang.Override

  public int getCustomHighlighterMatchesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetCustomHighlighterMatches().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int ISSUE_MATCHES_FIELD_NUMBER = 6;
  private static final class IssueMatchesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                com.google.cloud.contactcenterinsights.v1.ContactCenterInsightsProto.internal_static_google_cloud_contactcenterinsights_v1_CalculateStatsResponse_IssueMatchesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.INT32,
                0);
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Integer> issueMatches_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
  internalGetIssueMatches() {
    if (issueMatches_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          IssueMatchesDefaultEntryHolder.defaultEntry);
    }
    return issueMatches_;
  }

  public int getIssueMatchesCount() {
    return internalGetIssueMatches().getMap().size();
  }
  /**
   * <pre>
   * A map associating each issue resource name with its respective number of
   * matches in the set of conversations. Key has the format:
   * `projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/issueModels/&lt;Issue Model
   * ID&gt;/issues/&lt;Issue ID&gt;`
   * </pre>
   *
   * <code>map&lt;string, int32&gt; issue_matches = 6;</code>
   */

  @java.lang.Override
  public boolean containsIssueMatches(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetIssueMatches().getMap().containsKey(key);
  }
  /**
   * Use {@link #getIssueMatchesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer> getIssueMatches() {
    return getIssueMatchesMap();
  }
  /**
   * <pre>
   * A map associating each issue resource name with its respective number of
   * matches in the set of conversations. Key has the format:
   * `projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/issueModels/&lt;Issue Model
   * ID&gt;/issues/&lt;Issue ID&gt;`
   * </pre>
   *
   * <code>map&lt;string, int32&gt; issue_matches = 6;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.Integer> getIssueMatchesMap() {
    return internalGetIssueMatches().getMap();
  }
  /**
   * <pre>
   * A map associating each issue resource name with its respective number of
   * matches in the set of conversations. Key has the format:
   * `projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/issueModels/&lt;Issue Model
   * ID&gt;/issues/&lt;Issue ID&gt;`
   * </pre>
   *
   * <code>map&lt;string, int32&gt; issue_matches = 6;</code>
   */
  @java.lang.Override

  public int getIssueMatchesOrDefault(
      java.lang.String key,
      int defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetIssueMatches().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * A map associating each issue resource name with its respective number of
   * matches in the set of conversations. Key has the format:
   * `projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/issueModels/&lt;Issue Model
   * ID&gt;/issues/&lt;Issue ID&gt;`
   * </pre>
   *
   * <code>map&lt;string, int32&gt; issue_matches = 6;</code>
   */
  @java.lang.Override

  public int getIssueMatchesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetIssueMatches().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (averageDuration_ != null) {
      output.writeMessage(1, getAverageDuration());
    }
    if (averageTurnCount_ != 0) {
      output.writeInt32(2, averageTurnCount_);
    }
    if (conversationCount_ != 0) {
      output.writeInt32(3, conversationCount_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetSmartHighlighterMatches(),
        SmartHighlighterMatchesDefaultEntryHolder.defaultEntry,
        4);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetCustomHighlighterMatches(),
        CustomHighlighterMatchesDefaultEntryHolder.defaultEntry,
        5);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetIssueMatches(),
        IssueMatchesDefaultEntryHolder.defaultEntry,
        6);
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (averageDuration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getAverageDuration());
    }
    if (averageTurnCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, averageTurnCount_);
    }
    if (conversationCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, conversationCount_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
         : internalGetSmartHighlighterMatches().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
      smartHighlighterMatches__ = SmartHighlighterMatchesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, smartHighlighterMatches__);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
         : internalGetCustomHighlighterMatches().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
      customHighlighterMatches__ = CustomHighlighterMatchesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, customHighlighterMatches__);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
         : internalGetIssueMatches().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
      issueMatches__ = IssueMatchesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, issueMatches__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse)) {
      return super.equals(obj);
    }
    com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse other = (com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse) obj;

    if (hasAverageDuration() != other.hasAverageDuration()) return false;
    if (hasAverageDuration()) {
      if (!getAverageDuration()
          .equals(other.getAverageDuration())) return false;
    }
    if (getAverageTurnCount()
        != other.getAverageTurnCount()) return false;
    if (getConversationCount()
        != other.getConversationCount()) return false;
    if (!internalGetSmartHighlighterMatches().equals(
        other.internalGetSmartHighlighterMatches())) return false;
    if (!internalGetCustomHighlighterMatches().equals(
        other.internalGetCustomHighlighterMatches())) return false;
    if (!internalGetIssueMatches().equals(
        other.internalGetIssueMatches())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAverageDuration()) {
      hash = (37 * hash) + AVERAGE_DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getAverageDuration().hashCode();
    }
    hash = (37 * hash) + AVERAGE_TURN_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getAverageTurnCount();
    hash = (37 * hash) + CONVERSATION_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getConversationCount();
    if (!internalGetSmartHighlighterMatches().getMap().isEmpty()) {
      hash = (37 * hash) + SMART_HIGHLIGHTER_MATCHES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetSmartHighlighterMatches().hashCode();
    }
    if (!internalGetCustomHighlighterMatches().getMap().isEmpty()) {
      hash = (37 * hash) + CUSTOM_HIGHLIGHTER_MATCHES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetCustomHighlighterMatches().hashCode();
    }
    if (!internalGetIssueMatches().getMap().isEmpty()) {
      hash = (37 * hash) + ISSUE_MATCHES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetIssueMatches().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The response for calculating conversation statistics.
   * </pre>
   *
   * Protobuf type {@code google.cloud.contactcenterinsights.v1.CalculateStatsResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.cloud.contactcenterinsights.v1.CalculateStatsResponse)
      com.google.cloud.contactcenterinsights.v1.CalculateStatsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.cloud.contactcenterinsights.v1.ContactCenterInsightsProto.internal_static_google_cloud_contactcenterinsights_v1_CalculateStatsResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetSmartHighlighterMatches();
        case 5:
          return internalGetCustomHighlighterMatches();
        case 6:
          return internalGetIssueMatches();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableSmartHighlighterMatches();
        case 5:
          return internalGetMutableCustomHighlighterMatches();
        case 6:
          return internalGetMutableIssueMatches();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.contactcenterinsights.v1.ContactCenterInsightsProto.internal_static_google_cloud_contactcenterinsights_v1_CalculateStatsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse.class, com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse.Builder.class);
    }

    // Construct using com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (averageDurationBuilder_ == null) {
        averageDuration_ = null;
      } else {
        averageDuration_ = null;
        averageDurationBuilder_ = null;
      }
      averageTurnCount_ = 0;

      conversationCount_ = 0;

      internalGetMutableSmartHighlighterMatches().clear();
      internalGetMutableCustomHighlighterMatches().clear();
      internalGetMutableIssueMatches().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.cloud.contactcenterinsights.v1.ContactCenterInsightsProto.internal_static_google_cloud_contactcenterinsights_v1_CalculateStatsResponse_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse getDefaultInstanceForType() {
      return com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse build() {
      com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse buildPartial() {
      com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse result = new com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse(this);
      int from_bitField0_ = bitField0_;
      if (averageDurationBuilder_ == null) {
        result.averageDuration_ = averageDuration_;
      } else {
        result.averageDuration_ = averageDurationBuilder_.build();
      }
      result.averageTurnCount_ = averageTurnCount_;
      result.conversationCount_ = conversationCount_;
      result.smartHighlighterMatches_ = internalGetSmartHighlighterMatches();
      result.smartHighlighterMatches_.makeImmutable();
      result.customHighlighterMatches_ = internalGetCustomHighlighterMatches();
      result.customHighlighterMatches_.makeImmutable();
      result.issueMatches_ = internalGetIssueMatches();
      result.issueMatches_.makeImmutable();
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse) {
        return mergeFrom((com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse other) {
      if (other == com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse.getDefaultInstance()) return this;
      if (other.hasAverageDuration()) {
        mergeAverageDuration(other.getAverageDuration());
      }
      if (other.getAverageTurnCount() != 0) {
        setAverageTurnCount(other.getAverageTurnCount());
      }
      if (other.getConversationCount() != 0) {
        setConversationCount(other.getConversationCount());
      }
      internalGetMutableSmartHighlighterMatches().mergeFrom(
          other.internalGetSmartHighlighterMatches());
      internalGetMutableCustomHighlighterMatches().mergeFrom(
          other.internalGetCustomHighlighterMatches());
      internalGetMutableIssueMatches().mergeFrom(
          other.internalGetIssueMatches());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Duration averageDuration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> averageDurationBuilder_;
    /**
     * <pre>
     * The average duration of all conversations. The average is calculated using
     * only conversations that have a time duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration average_duration = 1;</code>
     * @return Whether the averageDuration field is set.
     */
    public boolean hasAverageDuration() {
      return averageDurationBuilder_ != null || averageDuration_ != null;
    }
    /**
     * <pre>
     * The average duration of all conversations. The average is calculated using
     * only conversations that have a time duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration average_duration = 1;</code>
     * @return The averageDuration.
     */
    public com.google.protobuf.Duration getAverageDuration() {
      if (averageDurationBuilder_ == null) {
        return averageDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : averageDuration_;
      } else {
        return averageDurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The average duration of all conversations. The average is calculated using
     * only conversations that have a time duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration average_duration = 1;</code>
     */
    public Builder setAverageDuration(com.google.protobuf.Duration value) {
      if (averageDurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        averageDuration_ = value;
        onChanged();
      } else {
        averageDurationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The average duration of all conversations. The average is calculated using
     * only conversations that have a time duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration average_duration = 1;</code>
     */
    public Builder setAverageDuration(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (averageDurationBuilder_ == null) {
        averageDuration_ = builderForValue.build();
        onChanged();
      } else {
        averageDurationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The average duration of all conversations. The average is calculated using
     * only conversations that have a time duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration average_duration = 1;</code>
     */
    public Builder mergeAverageDuration(com.google.protobuf.Duration value) {
      if (averageDurationBuilder_ == null) {
        if (averageDuration_ != null) {
          averageDuration_ =
            com.google.protobuf.Duration.newBuilder(averageDuration_).mergeFrom(value).buildPartial();
        } else {
          averageDuration_ = value;
        }
        onChanged();
      } else {
        averageDurationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The average duration of all conversations. The average is calculated using
     * only conversations that have a time duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration average_duration = 1;</code>
     */
    public Builder clearAverageDuration() {
      if (averageDurationBuilder_ == null) {
        averageDuration_ = null;
        onChanged();
      } else {
        averageDuration_ = null;
        averageDurationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The average duration of all conversations. The average is calculated using
     * only conversations that have a time duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration average_duration = 1;</code>
     */
    public com.google.protobuf.Duration.Builder getAverageDurationBuilder() {
      
      onChanged();
      return getAverageDurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The average duration of all conversations. The average is calculated using
     * only conversations that have a time duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration average_duration = 1;</code>
     */
    public com.google.protobuf.DurationOrBuilder getAverageDurationOrBuilder() {
      if (averageDurationBuilder_ != null) {
        return averageDurationBuilder_.getMessageOrBuilder();
      } else {
        return averageDuration_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : averageDuration_;
      }
    }
    /**
     * <pre>
     * The average duration of all conversations. The average is calculated using
     * only conversations that have a time duration.
     * </pre>
     *
     * <code>.google.protobuf.Duration average_duration = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getAverageDurationFieldBuilder() {
      if (averageDurationBuilder_ == null) {
        averageDurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getAverageDuration(),
                getParentForChildren(),
                isClean());
        averageDuration_ = null;
      }
      return averageDurationBuilder_;
    }

    private int averageTurnCount_ ;
    /**
     * <pre>
     * The average number of turns per conversation.
     * </pre>
     *
     * <code>int32 average_turn_count = 2;</code>
     * @return The averageTurnCount.
     */
    @java.lang.Override
    public int getAverageTurnCount() {
      return averageTurnCount_;
    }
    /**
     * <pre>
     * The average number of turns per conversation.
     * </pre>
     *
     * <code>int32 average_turn_count = 2;</code>
     * @param value The averageTurnCount to set.
     * @return This builder for chaining.
     */
    public Builder setAverageTurnCount(int value) {
      
      averageTurnCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The average number of turns per conversation.
     * </pre>
     *
     * <code>int32 average_turn_count = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAverageTurnCount() {
      
      averageTurnCount_ = 0;
      onChanged();
      return this;
    }

    private int conversationCount_ ;
    /**
     * <pre>
     * The total number of conversations.
     * </pre>
     *
     * <code>int32 conversation_count = 3;</code>
     * @return The conversationCount.
     */
    @java.lang.Override
    public int getConversationCount() {
      return conversationCount_;
    }
    /**
     * <pre>
     * The total number of conversations.
     * </pre>
     *
     * <code>int32 conversation_count = 3;</code>
     * @param value The conversationCount to set.
     * @return This builder for chaining.
     */
    public Builder setConversationCount(int value) {
      
      conversationCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The total number of conversations.
     * </pre>
     *
     * <code>int32 conversation_count = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearConversationCount() {
      
      conversationCount_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> smartHighlighterMatches_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetSmartHighlighterMatches() {
      if (smartHighlighterMatches_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SmartHighlighterMatchesDefaultEntryHolder.defaultEntry);
      }
      return smartHighlighterMatches_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetMutableSmartHighlighterMatches() {
      onChanged();;
      if (smartHighlighterMatches_ == null) {
        smartHighlighterMatches_ = com.google.protobuf.MapField.newMapField(
            SmartHighlighterMatchesDefaultEntryHolder.defaultEntry);
      }
      if (!smartHighlighterMatches_.isMutable()) {
        smartHighlighterMatches_ = smartHighlighterMatches_.copy();
      }
      return smartHighlighterMatches_;
    }

    public int getSmartHighlighterMatchesCount() {
      return internalGetSmartHighlighterMatches().getMap().size();
    }
    /**
     * <pre>
     * A map associating each smart highlighter display name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; smart_highlighter_matches = 4;</code>
     */

    @java.lang.Override
    public boolean containsSmartHighlighterMatches(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetSmartHighlighterMatches().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSmartHighlighterMatchesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getSmartHighlighterMatches() {
      return getSmartHighlighterMatchesMap();
    }
    /**
     * <pre>
     * A map associating each smart highlighter display name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; smart_highlighter_matches = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer> getSmartHighlighterMatchesMap() {
      return internalGetSmartHighlighterMatches().getMap();
    }
    /**
     * <pre>
     * A map associating each smart highlighter display name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; smart_highlighter_matches = 4;</code>
     */
    @java.lang.Override

    public int getSmartHighlighterMatchesOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetSmartHighlighterMatches().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A map associating each smart highlighter display name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; smart_highlighter_matches = 4;</code>
     */
    @java.lang.Override

    public int getSmartHighlighterMatchesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetSmartHighlighterMatches().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearSmartHighlighterMatches() {
      internalGetMutableSmartHighlighterMatches().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * A map associating each smart highlighter display name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; smart_highlighter_matches = 4;</code>
     */

    public Builder removeSmartHighlighterMatches(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableSmartHighlighterMatches().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getMutableSmartHighlighterMatches() {
      return internalGetMutableSmartHighlighterMatches().getMutableMap();
    }
    /**
     * <pre>
     * A map associating each smart highlighter display name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; smart_highlighter_matches = 4;</code>
     */
    public Builder putSmartHighlighterMatches(
        java.lang.String key,
        int value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      
      internalGetMutableSmartHighlighterMatches().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * A map associating each smart highlighter display name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; smart_highlighter_matches = 4;</code>
     */

    public Builder putAllSmartHighlighterMatches(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      internalGetMutableSmartHighlighterMatches().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> customHighlighterMatches_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetCustomHighlighterMatches() {
      if (customHighlighterMatches_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CustomHighlighterMatchesDefaultEntryHolder.defaultEntry);
      }
      return customHighlighterMatches_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetMutableCustomHighlighterMatches() {
      onChanged();;
      if (customHighlighterMatches_ == null) {
        customHighlighterMatches_ = com.google.protobuf.MapField.newMapField(
            CustomHighlighterMatchesDefaultEntryHolder.defaultEntry);
      }
      if (!customHighlighterMatches_.isMutable()) {
        customHighlighterMatches_ = customHighlighterMatches_.copy();
      }
      return customHighlighterMatches_;
    }

    public int getCustomHighlighterMatchesCount() {
      return internalGetCustomHighlighterMatches().getMap().size();
    }
    /**
     * <pre>
     * A map associating each custom highlighter resource name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; custom_highlighter_matches = 5;</code>
     */

    @java.lang.Override
    public boolean containsCustomHighlighterMatches(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetCustomHighlighterMatches().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCustomHighlighterMatchesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getCustomHighlighterMatches() {
      return getCustomHighlighterMatchesMap();
    }
    /**
     * <pre>
     * A map associating each custom highlighter resource name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; custom_highlighter_matches = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer> getCustomHighlighterMatchesMap() {
      return internalGetCustomHighlighterMatches().getMap();
    }
    /**
     * <pre>
     * A map associating each custom highlighter resource name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; custom_highlighter_matches = 5;</code>
     */
    @java.lang.Override

    public int getCustomHighlighterMatchesOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetCustomHighlighterMatches().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A map associating each custom highlighter resource name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; custom_highlighter_matches = 5;</code>
     */
    @java.lang.Override

    public int getCustomHighlighterMatchesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetCustomHighlighterMatches().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearCustomHighlighterMatches() {
      internalGetMutableCustomHighlighterMatches().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * A map associating each custom highlighter resource name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; custom_highlighter_matches = 5;</code>
     */

    public Builder removeCustomHighlighterMatches(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableCustomHighlighterMatches().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getMutableCustomHighlighterMatches() {
      return internalGetMutableCustomHighlighterMatches().getMutableMap();
    }
    /**
     * <pre>
     * A map associating each custom highlighter resource name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; custom_highlighter_matches = 5;</code>
     */
    public Builder putCustomHighlighterMatches(
        java.lang.String key,
        int value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      
      internalGetMutableCustomHighlighterMatches().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * A map associating each custom highlighter resource name with its respective
     * number of matches in the set of conversations.
     * </pre>
     *
     * <code>map&lt;string, int32&gt; custom_highlighter_matches = 5;</code>
     */

    public Builder putAllCustomHighlighterMatches(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      internalGetMutableCustomHighlighterMatches().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> issueMatches_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetIssueMatches() {
      if (issueMatches_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IssueMatchesDefaultEntryHolder.defaultEntry);
      }
      return issueMatches_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetMutableIssueMatches() {
      onChanged();;
      if (issueMatches_ == null) {
        issueMatches_ = com.google.protobuf.MapField.newMapField(
            IssueMatchesDefaultEntryHolder.defaultEntry);
      }
      if (!issueMatches_.isMutable()) {
        issueMatches_ = issueMatches_.copy();
      }
      return issueMatches_;
    }

    public int getIssueMatchesCount() {
      return internalGetIssueMatches().getMap().size();
    }
    /**
     * <pre>
     * A map associating each issue resource name with its respective number of
     * matches in the set of conversations. Key has the format:
     * `projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/issueModels/&lt;Issue Model
     * ID&gt;/issues/&lt;Issue ID&gt;`
     * </pre>
     *
     * <code>map&lt;string, int32&gt; issue_matches = 6;</code>
     */

    @java.lang.Override
    public boolean containsIssueMatches(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetIssueMatches().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIssueMatchesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getIssueMatches() {
      return getIssueMatchesMap();
    }
    /**
     * <pre>
     * A map associating each issue resource name with its respective number of
     * matches in the set of conversations. Key has the format:
     * `projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/issueModels/&lt;Issue Model
     * ID&gt;/issues/&lt;Issue ID&gt;`
     * </pre>
     *
     * <code>map&lt;string, int32&gt; issue_matches = 6;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer> getIssueMatchesMap() {
      return internalGetIssueMatches().getMap();
    }
    /**
     * <pre>
     * A map associating each issue resource name with its respective number of
     * matches in the set of conversations. Key has the format:
     * `projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/issueModels/&lt;Issue Model
     * ID&gt;/issues/&lt;Issue ID&gt;`
     * </pre>
     *
     * <code>map&lt;string, int32&gt; issue_matches = 6;</code>
     */
    @java.lang.Override

    public int getIssueMatchesOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIssueMatches().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A map associating each issue resource name with its respective number of
     * matches in the set of conversations. Key has the format:
     * `projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/issueModels/&lt;Issue Model
     * ID&gt;/issues/&lt;Issue ID&gt;`
     * </pre>
     *
     * <code>map&lt;string, int32&gt; issue_matches = 6;</code>
     */
    @java.lang.Override

    public int getIssueMatchesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetIssueMatches().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearIssueMatches() {
      internalGetMutableIssueMatches().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * A map associating each issue resource name with its respective number of
     * matches in the set of conversations. Key has the format:
     * `projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/issueModels/&lt;Issue Model
     * ID&gt;/issues/&lt;Issue ID&gt;`
     * </pre>
     *
     * <code>map&lt;string, int32&gt; issue_matches = 6;</code>
     */

    public Builder removeIssueMatches(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableIssueMatches().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getMutableIssueMatches() {
      return internalGetMutableIssueMatches().getMutableMap();
    }
    /**
     * <pre>
     * A map associating each issue resource name with its respective number of
     * matches in the set of conversations. Key has the format:
     * `projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/issueModels/&lt;Issue Model
     * ID&gt;/issues/&lt;Issue ID&gt;`
     * </pre>
     *
     * <code>map&lt;string, int32&gt; issue_matches = 6;</code>
     */
    public Builder putIssueMatches(
        java.lang.String key,
        int value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      
      internalGetMutableIssueMatches().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * A map associating each issue resource name with its respective number of
     * matches in the set of conversations. Key has the format:
     * `projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/issueModels/&lt;Issue Model
     * ID&gt;/issues/&lt;Issue ID&gt;`
     * </pre>
     *
     * <code>map&lt;string, int32&gt; issue_matches = 6;</code>
     */

    public Builder putAllIssueMatches(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      internalGetMutableIssueMatches().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.cloud.contactcenterinsights.v1.CalculateStatsResponse)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.contactcenterinsights.v1.CalculateStatsResponse)
  private static final com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse();
  }

  public static com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CalculateStatsResponse>
      PARSER = new com.google.protobuf.AbstractParser<CalculateStatsResponse>() {
    @java.lang.Override
    public CalculateStatsResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CalculateStatsResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CalculateStatsResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CalculateStatsResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.contactcenterinsights.v1.CalculateStatsResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

